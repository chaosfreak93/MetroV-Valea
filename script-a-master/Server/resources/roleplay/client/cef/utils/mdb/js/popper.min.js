/*
 Copyright (C) Federico Zivolo 2019
 Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).
 */ (function(e, t) {
    'object' == typeof exports && 'undefined' != typeof module ? module.exports = t() : 'function' == typeof define && define.amd ? define(t) : e.Popper = t();
})(this, function() {
    'use strict';
    function e(e1) {
        return e1 && '[object Function]' === ({
        }).toString.call(e1);
    }
    function t(e1, t1) {
        if (1 !== e1.nodeType) return [];
        var o = e1.ownerDocument.defaultView, n = o.getComputedStyle(e1, null);
        return t1 ? n[t1] : n;
    }
    function o(e1) {
        return 'HTML' === e1.nodeName ? e1 : e1.parentNode || e1.host;
    }
    function n(e1) {
        if (!e1) return document.body;
        switch(e1.nodeName){
            case 'HTML':
            case 'BODY':
                return e1.ownerDocument.body;
            case '#document':
                return e1.body;
        }
        var i = t(e1), r = i.overflow, p = i.overflowX, s = i.overflowY;
        return /(auto|scroll|overlay)/.test(r + s + p) ? e1 : n(o(e1));
    }
    function r(e1) {
        return 11 === e1 ? pe : 10 === e1 ? se : pe || se;
    }
    function p(e1) {
        if (!e1) return document.documentElement;
        for(var o1 = r(10) ? document.body : null, n1 = e1.offsetParent || null; n1 === o1 && e1.nextElementSibling;)n1 = (e1 = e1.nextElementSibling).offsetParent;
        var i = n1 && n1.nodeName;
        return i && 'BODY' !== i && 'HTML' !== i ? -1 !== [
            'TH',
            'TD',
            'TABLE'
        ].indexOf(n1.nodeName) && 'static' === t(n1, 'position') ? p(n1) : n1 : e1 ? e1.ownerDocument.documentElement : document.documentElement;
    }
    function s(e1) {
        var t1 = e1.nodeName;
        return 'BODY' !== t1 && ('HTML' === t1 || p(e1.firstElementChild) === e1);
    }
    function d(e1) {
        return null === e1.parentNode ? e1 : d(e1.parentNode);
    }
    function a(e1, t1) {
        if (!e1 || !e1.nodeType || !t1 || !t1.nodeType) return document.documentElement;
        var o1 = e1.compareDocumentPosition(t1) & Node.DOCUMENT_POSITION_FOLLOWING, n1 = o1 ? e1 : t1, i = o1 ? t1 : e1, r1 = document.createRange();
        r1.setStart(n1, 0), r1.setEnd(i, 0);
        var l = r1.commonAncestorContainer;
        if (e1 !== l && t1 !== l || n1.contains(i)) return s(l) ? l : p(l);
        var f = d(e1);
        return f.host ? a(f.host, t1) : a(e1, d(t1).host);
    }
    function l(e1) {
        var t1 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 'top', o1 = 'top' === t1 ? 'scrollTop' : 'scrollLeft', n1 = e1.nodeName;
        if ('BODY' === n1 || 'HTML' === n1) {
            var i = e1.ownerDocument.documentElement, r1 = e1.ownerDocument.scrollingElement || i;
            return r1[o1];
        }
        return e1[o1];
    }
    function f(e1, t1) {
        var o1 = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], n1 = l(t1, 'top'), i = l(t1, 'left'), r2 = o1 ? -1 : 1;
        return e1.top += n1 * r2, e1.bottom += n1 * r2, e1.left += i * r2, e1.right += i * r2, e1;
    }
    function m(e1, t1) {
        var o1 = 'x' === t1 ? 'Left' : 'Top', n1 = 'Left' == o1 ? 'Right' : 'Bottom';
        return parseFloat(e1['border' + o1 + 'Width'], 10) + parseFloat(e1['border' + n1 + 'Width'], 10);
    }
    function h(e1, t1, o1, n1) {
        return ee(t1['offset' + e1], t1['scroll' + e1], o1['client' + e1], o1['offset' + e1], o1['scroll' + e1], r(10) ? parseInt(o1['offset' + e1]) + parseInt(n1['margin' + ('Height' === e1 ? 'Top' : 'Left')]) + parseInt(n1['margin' + ('Height' === e1 ? 'Bottom' : 'Right')]) : 0);
    }
    function c(e1) {
        var t1 = e1.body, o1 = e1.documentElement, n1 = r(10) && getComputedStyle(o1);
        return {
            height: h('Height', t1, o1, n1),
            width: h('Width', t1, o1, n1)
        };
    }
    function g(e1) {
        return fe({
        }, e1, {
            right: e1.left + e1.width,
            bottom: e1.top + e1.height
        });
    }
    function u(e1) {
        var o1 = {
        };
        try {
            if (r(10)) {
                o1 = e1.getBoundingClientRect();
                var n1 = l(e1, 'top'), i = l(e1, 'left');
                o1.top += n1, o1.left += i, o1.bottom += n1, o1.right += i;
            } else o1 = e1.getBoundingClientRect();
        } catch (t1) {
        }
        var p1 = {
            left: o1.left,
            top: o1.top,
            width: o1.right - o1.left,
            height: o1.bottom - o1.top
        }, s1 = 'HTML' === e1.nodeName ? c(e1.ownerDocument) : {
        }, d1 = s1.width || e1.clientWidth || p1.right - p1.left, a1 = s1.height || e1.clientHeight || p1.bottom - p1.top, f1 = e1.offsetWidth - d1, h1 = e1.offsetHeight - a1;
        if (f1 || h1) {
            var u1 = t(e1);
            f1 -= m(u1, 'x'), h1 -= m(u1, 'y'), p1.width -= f1, p1.height -= h1;
        }
        return g(p1);
    }
    function b(e1, o1) {
        var i = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], p1 = r(10), s1 = 'HTML' === o1.nodeName, d1 = u(e1), a1 = u(o1), l1 = n(e1), m1 = t(o1), h1 = parseFloat(m1.borderTopWidth, 10), c1 = parseFloat(m1.borderLeftWidth, 10);
        i && s1 && (a1.top = ee(a1.top, 0), a1.left = ee(a1.left, 0));
        var b1 = g({
            top: d1.top - a1.top - h1,
            left: d1.left - a1.left - c1,
            width: d1.width,
            height: d1.height
        });
        if (b1.marginTop = 0, b1.marginLeft = 0, !p1 && s1) {
            var w = parseFloat(m1.marginTop, 10), y = parseFloat(m1.marginLeft, 10);
            b1.top -= h1 - w, b1.bottom -= h1 - w, b1.left -= c1 - y, b1.right -= c1 - y, b1.marginTop = w, b1.marginLeft = y;
        }
        return (p1 && !i ? o1.contains(l1) : o1 === l1 && 'BODY' !== l1.nodeName) && (b1 = f(b1, o1)), b1;
    }
    function w(e1) {
        var t1 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1], o1 = e1.ownerDocument.documentElement, n2 = b(e1, o1), i = ee(o1.clientWidth, window.innerWidth || 0), r2 = ee(o1.clientHeight, window.innerHeight || 0), p1 = t1 ? 0 : l(o1), s1 = t1 ? 0 : l(o1, 'left'), d1 = {
            top: p1 - n2.top + n2.marginTop,
            left: s1 - n2.left + n2.marginLeft,
            width: i,
            height: r2
        };
        return g(d1);
    }
    function y(e1) {
        var n2 = e1.nodeName;
        if ('BODY' === n2 || 'HTML' === n2) return !1;
        if ('fixed' === t(e1, 'position')) return !0;
        var i = o(e1);
        return !!i && y(i);
    }
    function E(e1) {
        if (!e1 || !e1.parentElement || r()) return document.documentElement;
        for(var o1 = e1.parentElement; o1 && 'none' === t(o1, 'transform');)o1 = o1.parentElement;
        return o1 || document.documentElement;
    }
    function v(e1, t1, i, r2) {
        var p1 = 4 < arguments.length && void 0 !== arguments[4] && arguments[4], s1 = {
            top: 0,
            left: 0
        }, d1 = p1 ? E(e1) : a(e1, t1);
        if ('viewport' === r2) s1 = w(d1, p1);
        else {
            var l1;
            'scrollParent' === r2 ? (l1 = n(o(t1)), 'BODY' === l1.nodeName && (l1 = e1.ownerDocument.documentElement)) : 'window' === r2 ? l1 = e1.ownerDocument.documentElement : l1 = r2;
            var f1 = b(l1, d1, p1);
            if ('HTML' === l1.nodeName && !y(d1)) {
                var m1 = c(e1.ownerDocument), h1 = m1.height, g1 = m1.width;
                s1.top += f1.top - f1.marginTop, s1.bottom = h1 + f1.top, s1.left += f1.left - f1.marginLeft, s1.right = g1 + f1.left;
            } else s1 = f1;
        }
        i = i || 0;
        var u2 = 'number' == typeof i;
        return s1.left += u2 ? i : i.left || 0, s1.top += u2 ? i : i.top || 0, s1.right -= u2 ? i : i.right || 0, s1.bottom -= u2 ? i : i.bottom || 0, s1;
    }
    function x(e1) {
        var t1 = e1.width, o1 = e1.height;
        return t1 * o1;
    }
    function O(e1, t1, o1, n2, i) {
        var r2 = 5 < arguments.length && void 0 !== arguments[5] ? arguments[5] : 0;
        if (-1 === e1.indexOf('auto')) return e1;
        var p1 = v(o1, n2, r2, i), s1 = {
            top: {
                width: p1.width,
                height: t1.top - p1.top
            },
            right: {
                width: p1.right - t1.right,
                height: p1.height
            },
            bottom: {
                width: p1.width,
                height: p1.bottom - t1.bottom
            },
            left: {
                width: t1.left - p1.left,
                height: p1.height
            }
        }, d1 = Object.keys(s1).map(function(e2) {
            return fe({
                key: e2
            }, s1[e2], {
                area: x(s1[e2])
            });
        }).sort(function(e2, t2) {
            return t2.area - e2.area;
        }), a1 = d1.filter(function(e2) {
            var t2 = e2.width, n3 = e2.height;
            return t2 >= o1.clientWidth && n3 >= o1.clientHeight;
        }), l2 = 0 < a1.length ? a1[0].key : d1[0].key, f2 = e1.split('-')[1];
        return l2 + (f2 ? '-' + f2 : '');
    }
    function L(e1, t1, o1) {
        var n2 = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null, i = n2 ? E(t1) : a(t1, o1);
        return b(o1, i, n2);
    }
    function S(e1) {
        var t1 = e1.ownerDocument.defaultView, o1 = t1.getComputedStyle(e1), n2 = parseFloat(o1.marginTop || 0) + parseFloat(o1.marginBottom || 0), i = parseFloat(o1.marginLeft || 0) + parseFloat(o1.marginRight || 0), r2 = {
            width: e1.offsetWidth + i,
            height: e1.offsetHeight + n2
        };
        return r2;
    }
    function T(e1) {
        var t1 = {
            left: 'right',
            right: 'left',
            bottom: 'top',
            top: 'bottom'
        };
        return e1.replace(/left|right|bottom|top/g, function(e2) {
            return t1[e2];
        });
    }
    function D(e1, t1, o1) {
        o1 = o1.split('-')[0];
        var n2 = S(e1), i = {
            width: n2.width,
            height: n2.height
        }, r2 = -1 !== [
            'right',
            'left'
        ].indexOf(o1), p1 = r2 ? 'top' : 'left', s1 = r2 ? 'left' : 'top', d1 = r2 ? 'height' : 'width', a1 = r2 ? 'width' : 'height';
        return i[p1] = t1[p1] + t1[d1] / 2 - n2[d1] / 2, i[s1] = o1 === s1 ? t1[s1] - n2[a1] : t1[T(s1)], i;
    }
    function C(e1, t1) {
        return Array.prototype.find ? e1.find(t1) : e1.filter(t1)[0];
    }
    function N(e1, t1, o1) {
        if (Array.prototype.findIndex) return e1.findIndex(function(e2) {
            return e2[t1] === o1;
        });
        var n2 = C(e1, function(e2) {
            return e2[t1] === o1;
        });
        return e1.indexOf(n2);
    }
    function P(t1, o1, n2) {
        var i = void 0 === n2 ? t1 : t1.slice(0, N(t1, 'name', n2));
        return i.forEach(function(t2) {
            t2['function'] && console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
            var n3 = t2['function'] || t2.fn;
            t2.enabled && e(n3) && (o1.offsets.popper = g(o1.offsets.popper), o1.offsets.reference = g(o1.offsets.reference), o1 = n3(o1, t2));
        }), o1;
    }
    function k() {
        if (!this.state.isDestroyed) {
            var e1 = {
                instance: this,
                styles: {
                },
                arrowStyles: {
                },
                attributes: {
                },
                flipped: !1,
                offsets: {
                }
            };
            e1.offsets.reference = L(this.state, this.popper, this.reference, this.options.positionFixed), e1.placement = O(this.options.placement, e1.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding), e1.originalPlacement = e1.placement, e1.positionFixed = this.options.positionFixed, e1.offsets.popper = D(this.popper, e1.offsets.reference, e1.placement), e1.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute', e1 = P(this.modifiers, e1), this.state.isCreated ? this.options.onUpdate(e1) : (this.state.isCreated = !0, this.options.onCreate(e1));
        }
    }
    function W(e2, t1) {
        return e2.some(function(e3) {
            var o1 = e3.name, n2 = e3.enabled;
            return n2 && o1 === t1;
        });
    }
    function H(e2) {
        for(var t1 = [
            !1,
            'ms',
            'Webkit',
            'Moz',
            'O'
        ], o1 = e2.charAt(0).toUpperCase() + e2.slice(1), n2 = 0; n2 < t1.length; n2++){
            var i = t1[n2], r2 = i ? '' + i + o1 : e2;
            if ('undefined' != typeof document.body.style[r2]) return r2;
        }
        return null;
    }
    function B() {
        return this.state.isDestroyed = !0, W(this.modifiers, 'applyStyle') && (this.popper.removeAttribute('x-placement'), this.popper.style.position = '', this.popper.style.top = '', this.popper.style.left = '', this.popper.style.right = '', this.popper.style.bottom = '', this.popper.style.willChange = '', this.popper.style[H('transform')] = ''), this.disableEventListeners(), this.options.removeOnDestroy && this.popper.parentNode.removeChild(this.popper), this;
    }
    function A(e2) {
        var t1 = e2.ownerDocument;
        return t1 ? t1.defaultView : window;
    }
    function M(e2, t1, o1, i) {
        var r3 = 'BODY' === e2.nodeName, p1 = r3 ? e2.ownerDocument.defaultView : e2;
        p1.addEventListener(t1, o1, {
            passive: !0
        }), r3 || M(n(p1.parentNode), t1, o1, i), i.push(p1);
    }
    function F(e2, t1, o1, i) {
        o1.updateBound = i, A(e2).addEventListener('resize', o1.updateBound, {
            passive: !0
        });
        var r3 = n(e2);
        return M(r3, 'scroll', o1.updateBound, o1.scrollParents), o1.scrollElement = r3, o1.eventsEnabled = !0, o1;
    }
    function I() {
        this.state.eventsEnabled || (this.state = F(this.reference, this.options, this.state, this.scheduleUpdate));
    }
    function R(e2, t1) {
        return A(e2).removeEventListener('resize', t1.updateBound), t1.scrollParents.forEach(function(e3) {
            e3.removeEventListener('scroll', t1.updateBound);
        }), t1.updateBound = null, t1.scrollParents = [], t1.scrollElement = null, t1.eventsEnabled = !1, t1;
    }
    function U() {
        this.state.eventsEnabled && (cancelAnimationFrame(this.scheduleUpdate), this.state = R(this.reference, this.state));
    }
    function Y(e2) {
        return '' !== e2 && !isNaN(parseFloat(e2)) && isFinite(e2);
    }
    function j(e2, t1) {
        Object.keys(t1).forEach(function(o1) {
            var n2 = '';
            -1 !== [
                'width',
                'height',
                'top',
                'right',
                'bottom',
                'left'
            ].indexOf(o1) && Y(t1[o1]) && (n2 = 'px'), e2.style[o1] = t1[o1] + n2;
        });
    }
    function V(e2, t1) {
        Object.keys(t1).forEach(function(o1) {
            var n2 = t1[o1];
            !1 === n2 ? e2.removeAttribute(o1) : e2.setAttribute(o1, t1[o1]);
        });
    }
    function q(e2, t1) {
        var o1 = e2.offsets, n2 = o1.popper, i = o1.reference, r3 = $, p1 = function(e3) {
            return e3;
        }, s1 = r3(i.width), d1 = r3(n2.width), a1 = -1 !== [
            'left',
            'right'
        ].indexOf(e2.placement), l2 = -1 !== e2.placement.indexOf('-'), f2 = t1 ? a1 || l2 || s1 % 2 == d1 % 2 ? r3 : Z : p1, m2 = t1 ? r3 : p1;
        return {
            left: f2(1 == s1 % 2 && 1 == d1 % 2 && !l2 && t1 ? n2.left - 1 : n2.left),
            top: m2(n2.top),
            bottom: m2(n2.bottom),
            right: f2(n2.right)
        };
    }
    function K(e2, t1, o1) {
        var n2 = C(e2, function(e3) {
            var o2 = e3.name;
            return o2 === t1;
        }), i = !!n2 && e2.some(function(e3) {
            return e3.name === o1 && e3.enabled && e3.order < n2.order;
        });
        if (!i) {
            var r3 = '`' + t1 + '`';
            console.warn('`' + o1 + '`' + ' modifier is required by ' + r3 + ' modifier in order to work, be sure to include it before ' + r3 + '!');
        }
        return i;
    }
    function z(e2) {
        return 'end' === e2 ? 'start' : 'start' === e2 ? 'end' : e2;
    }
    function G(e2) {
        var t1 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1], o1 = ce.indexOf(e2), n2 = ce.slice(o1 + 1).concat(ce.slice(0, o1));
        return t1 ? n2.reverse() : n2;
    }
    function _(e2, t1, o1, n2) {
        var i = e2.match(/((?:\-|\+)?\d*\.?\d*)(.*)/), r4 = +i[1], p1 = i[2];
        if (!r4) return e2;
        if (0 === p1.indexOf('%')) {
            var s1;
            switch(p1){
                case '%p':
                    s1 = o1;
                    break;
                case '%':
                case '%r':
                default:
                    s1 = n2;
            }
            var d1 = g(s1);
            return d1[t1] / 100 * r4;
        }
        if ('vh' === p1 || 'vw' === p1) {
            var a1;
            return a1 = 'vh' === p1 ? ee(document.documentElement.clientHeight, window.innerHeight || 0) : ee(document.documentElement.clientWidth, window.innerWidth || 0), a1 / 100 * r4;
        }
        return r4;
    }
    function X(e2, t1, o1, n2) {
        var i = [
            0,
            0
        ], r4 = -1 !== [
            'right',
            'left'
        ].indexOf(n2), p1 = e2.split(/(\+|\-)/).map(function(e3) {
            return e3.trim();
        }), s2 = p1.indexOf(C(p1, function(e3) {
            return -1 !== e3.search(/,|\s/);
        }));
        p1[s2] && -1 === p1[s2].indexOf(',') && console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
        var d2 = /\s*,\s*|\s+/, a2 = -1 === s2 ? [
            p1
        ] : [
            p1.slice(0, s2).concat([
                p1[s2].split(d2)[0]
            ]),
            [
                p1[s2].split(d2)[1]
            ].concat(p1.slice(s2 + 1))
        ];
        return a2 = a2.map(function(e3, n3) {
            var i1 = (1 === n3 ? !r4 : r4) ? 'height' : 'width', p2 = !1;
            return e3.reduce(function(e4, t2) {
                return '' === e4[e4.length - 1] && -1 !== [
                    '+',
                    '-'
                ].indexOf(t2) ? (e4[e4.length - 1] = t2, p2 = !0, e4) : p2 ? (e4[e4.length - 1] += t2, p2 = !1, e4) : e4.concat(t2);
            }, []).map(function(e4) {
                return _(e4, i1, t1, o1);
            });
        }), a2.forEach(function(e3, t2) {
            e3.forEach(function(o2, n3) {
                Y(o2) && (i[t2] += o2 * ('-' === e3[n3 - 1] ? -1 : 1));
            });
        }), i;
    }
    function J(e2, t1) {
        var o1, n2 = t1.offset, i = e2.placement, r4 = e2.offsets, p1 = r4.popper, s2 = r4.reference, d2 = i.split('-')[0];
        return o1 = Y(+n2) ? [
            +n2,
            0
        ] : X(n2, p1, s2, d2), 'left' === d2 ? (p1.top += o1[0], p1.left -= o1[1]) : 'right' === d2 ? (p1.top += o1[0], p1.left += o1[1]) : 'top' === d2 ? (p1.left += o1[0], p1.top -= o1[1]) : 'bottom' === d2 && (p1.left += o1[0], p1.top += o1[1]), e2.popper = p1, e2;
    }
    for(var Q = Math.min, Z = Math.floor, $ = Math.round, ee = Math.max, te = 'undefined' != typeof window && 'undefined' != typeof document, oe = [
        'Edge',
        'Trident',
        'Firefox'
    ], ne = 0, ie = 0; ie < oe.length; ie += 1)if (te && 0 <= navigator.userAgent.indexOf(oe[ie])) {
        ne = 1;
        break;
    }
    var i = te && window.Promise, re = i ? function(e2) {
        var t1 = !1;
        return function() {
            t1 || (t1 = !0, window.Promise.resolve().then(function() {
                t1 = !1, e2();
            }));
        };
    } : function(e2) {
        var t1 = !1;
        return function() {
            t1 || (t1 = !0, setTimeout(function() {
                t1 = !1, e2();
            }, ne));
        };
    }, pe = te && !!(window.MSInputMethodContext && document.documentMode), se = te && /MSIE 10/.test(navigator.userAgent), de = function(e2, t1) {
        if (!(e2 instanceof t1)) throw new TypeError('Cannot call a class as a function');
    }, ae = function() {
        function e2(e3, t1) {
            for(var o1, n2 = 0; n2 < t1.length; n2++)o1 = t1[n2], o1.enumerable = o1.enumerable || !1, o1.configurable = !0, 'value' in o1 && (o1.writable = !0), Object.defineProperty(e3, o1.key, o1);
        }
        return function(t1, o1, n2) {
            return o1 && e2(t1.prototype, o1), n2 && e2(t1, n2), t1;
        };
    }(), le = function(e2, t1, o1) {
        return t1 in e2 ? Object.defineProperty(e2, t1, {
            value: o1,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e2[t1] = o1, e2;
    }, fe = Object.assign || function(e2) {
        for(var t1, o1 = 1; o1 < arguments.length; o1++)for(var n2 in t1 = arguments[o1], t1)Object.prototype.hasOwnProperty.call(t1, n2) && (e2[n2] = t1[n2]);
        return e2;
    }, me = te && /Firefox/i.test(navigator.userAgent), he = [
        'auto-start',
        'auto',
        'auto-end',
        'top-start',
        'top',
        'top-end',
        'right-start',
        'right',
        'right-end',
        'bottom-end',
        'bottom',
        'bottom-start',
        'left-end',
        'left',
        'left-start'
    ], ce = he.slice(3), ge = {
        FLIP: 'flip',
        CLOCKWISE: 'clockwise',
        COUNTERCLOCKWISE: 'counterclockwise'
    }, ue = function() {
        function t1(o1, n2) {
            var i1 = this, r4 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : {
            };
            de(this, t1), this.scheduleUpdate = function() {
                return requestAnimationFrame(i1.update);
            }, this.update = re(this.update.bind(this)), this.options = fe({
            }, t1.Defaults, r4), this.state = {
                isDestroyed: !1,
                isCreated: !1,
                scrollParents: []
            }, this.reference = o1 && o1.jquery ? o1[0] : o1, this.popper = n2 && n2.jquery ? n2[0] : n2, this.options.modifiers = {
            }, Object.keys(fe({
            }, t1.Defaults.modifiers, r4.modifiers)).forEach(function(e2) {
                i1.options.modifiers[e2] = fe({
                }, t1.Defaults.modifiers[e2] || {
                }, r4.modifiers ? r4.modifiers[e2] : {
                });
            }), this.modifiers = Object.keys(this.options.modifiers).map(function(e2) {
                return fe({
                    name: e2
                }, i1.options.modifiers[e2]);
            }).sort(function(e2, t2) {
                return e2.order - t2.order;
            }), this.modifiers.forEach(function(t2) {
                t2.enabled && e(t2.onLoad) && t2.onLoad(i1.reference, i1.popper, i1.options, t2, i1.state);
            }), this.update();
            var p1 = this.options.eventsEnabled;
            p1 && this.enableEventListeners(), this.state.eventsEnabled = p1;
        }
        return ae(t1, [
            {
                key: 'update',
                value: function() {
                    return k.call(this);
                }
            },
            {
                key: 'destroy',
                value: function() {
                    return B.call(this);
                }
            },
            {
                key: 'enableEventListeners',
                value: function() {
                    return I.call(this);
                }
            },
            {
                key: 'disableEventListeners',
                value: function() {
                    return U.call(this);
                }
            }
        ]), t1;
    }();
    return ue.Utils = ('undefined' == typeof window ? global : window).PopperUtils, ue.placements = he, ue.Defaults = {
        placement: 'bottom',
        positionFixed: !1,
        eventsEnabled: !0,
        removeOnDestroy: !1,
        onCreate: function() {
        },
        onUpdate: function() {
        },
        modifiers: {
            shift: {
                order: 100,
                enabled: !0,
                fn: function(e2) {
                    var t1 = e2.placement, o1 = t1.split('-')[0], n2 = t1.split('-')[1];
                    if (n2) {
                        var i1 = e2.offsets, r4 = i1.reference, p1 = i1.popper, s2 = -1 !== [
                            'bottom',
                            'top'
                        ].indexOf(o1), d2 = s2 ? 'left' : 'top', a2 = s2 ? 'width' : 'height', l2 = {
                            start: le({
                            }, d2, r4[d2]),
                            end: le({
                            }, d2, r4[d2] + r4[a2] - p1[a2])
                        };
                        e2.offsets.popper = fe({
                        }, p1, l2[n2]);
                    }
                    return e2;
                }
            },
            offset: {
                order: 200,
                enabled: !0,
                fn: J,
                offset: 0
            },
            preventOverflow: {
                order: 300,
                enabled: !0,
                fn: function(e2, t1) {
                    var o1 = t1.boundariesElement || p(e2.instance.popper);
                    e2.instance.reference === o1 && (o1 = p(o1));
                    var n2 = H('transform'), i2 = e2.instance.popper.style, r5 = i2.top, s3 = i2.left, d3 = i2[n2];
                    i2.top = '', i2.left = '', i2[n2] = '';
                    var a3 = v(e2.instance.popper, e2.instance.reference, t1.padding, o1, e2.positionFixed);
                    i2.top = r5, i2.left = s3, i2[n2] = d3, t1.boundaries = a3;
                    var l3 = t1.priority, f2 = e2.offsets.popper, m2 = {
                        primary: function(e3) {
                            var o2 = f2[e3];
                            return f2[e3] < a3[e3] && !t1.escapeWithReference && (o2 = ee(f2[e3], a3[e3])), le({
                            }, e3, o2);
                        },
                        secondary: function(e3) {
                            var o2 = 'right' === e3 ? 'left' : 'top', n3 = f2[o2];
                            return f2[e3] > a3[e3] && !t1.escapeWithReference && (n3 = Q(f2[o2], a3[e3] - ('right' === e3 ? f2.width : f2.height))), le({
                            }, o2, n3);
                        }
                    };
                    return l3.forEach(function(e3) {
                        var t2 = -1 === [
                            'left',
                            'top'
                        ].indexOf(e3) ? 'secondary' : 'primary';
                        f2 = fe({
                        }, f2, m2[t2](e3));
                    }), e2.offsets.popper = f2, e2;
                },
                priority: [
                    'left',
                    'right',
                    'top',
                    'bottom'
                ],
                padding: 5,
                boundariesElement: 'scrollParent'
            },
            keepTogether: {
                order: 400,
                enabled: !0,
                fn: function(e2) {
                    var t1 = e2.offsets, o1 = t1.popper, n2 = t1.reference, i2 = e2.placement.split('-')[0], r5 = Z, p2 = -1 !== [
                        'top',
                        'bottom'
                    ].indexOf(i2), s3 = p2 ? 'right' : 'bottom', d3 = p2 ? 'left' : 'top', a3 = p2 ? 'width' : 'height';
                    return o1[s3] < r5(n2[d3]) && (e2.offsets.popper[d3] = r5(n2[d3]) - o1[a3]), o1[d3] > r5(n2[s3]) && (e2.offsets.popper[d3] = r5(n2[s3])), e2;
                }
            },
            arrow: {
                order: 500,
                enabled: !0,
                fn: function(e2, o1) {
                    var n2;
                    if (!K(e2.instance.modifiers, 'arrow', 'keepTogether')) return e2;
                    var i2 = o1.element;
                    if ('string' == typeof i2) {
                        if (i2 = e2.instance.popper.querySelector(i2), !i2) return e2;
                    } else if (!e2.instance.popper.contains(i2)) return console.warn('WARNING: `arrow.element` must be child of its popper element!'), e2;
                    var r5 = e2.placement.split('-')[0], p2 = e2.offsets, s3 = p2.popper, d3 = p2.reference, a3 = -1 !== [
                        'left',
                        'right'
                    ].indexOf(r5), l3 = a3 ? 'height' : 'width', f2 = a3 ? 'Top' : 'Left', m2 = f2.toLowerCase(), h2 = a3 ? 'left' : 'top', c1 = a3 ? 'bottom' : 'right', u2 = S(i2)[l3];
                    d3[c1] - u2 < s3[m2] && (e2.offsets.popper[m2] -= s3[m2] - (d3[c1] - u2)), d3[m2] + u2 > s3[c1] && (e2.offsets.popper[m2] += d3[m2] + u2 - s3[c1]), e2.offsets.popper = g(e2.offsets.popper);
                    var b1 = d3[m2] + d3[l3] / 2 - u2 / 2, w1 = t(e2.instance.popper), y1 = parseFloat(w1['margin' + f2], 10), E1 = parseFloat(w1['border' + f2 + 'Width'], 10), v1 = b1 - e2.offsets.popper[m2] - y1 - E1;
                    return v1 = ee(Q(s3[l3] - u2, v1), 0), e2.arrowElement = i2, e2.offsets.arrow = (n2 = {
                    }, le(n2, m2, $(v1)), le(n2, h2, ''), n2), e2;
                },
                element: '[x-arrow]'
            },
            flip: {
                order: 600,
                enabled: !0,
                fn: function(e2, t1) {
                    if (W(e2.instance.modifiers, 'inner')) return e2;
                    if (e2.flipped && e2.placement === e2.originalPlacement) return e2;
                    var o1 = v(e2.instance.popper, e2.instance.reference, t1.padding, t1.boundariesElement, e2.positionFixed), n2 = e2.placement.split('-')[0], i2 = T(n2), r5 = e2.placement.split('-')[1] || '', p2 = [];
                    switch(t1.behavior){
                        case ge.FLIP:
                            p2 = [
                                n2,
                                i2
                            ];
                            break;
                        case ge.CLOCKWISE:
                            p2 = G(n2);
                            break;
                        case ge.COUNTERCLOCKWISE:
                            p2 = G(n2, !0);
                            break;
                        default:
                            p2 = t1.behavior;
                    }
                    return p2.forEach(function(s3, d3) {
                        if (n2 !== s3 || p2.length === d3 + 1) return e2;
                        n2 = e2.placement.split('-')[0], i2 = T(n2);
                        var a3 = e2.offsets.popper, l3 = e2.offsets.reference, f2 = Z, m2 = 'left' === n2 && f2(a3.right) > f2(l3.left) || 'right' === n2 && f2(a3.left) < f2(l3.right) || 'top' === n2 && f2(a3.bottom) > f2(l3.top) || 'bottom' === n2 && f2(a3.top) < f2(l3.bottom), h2 = f2(a3.left) < f2(o1.left), c1 = f2(a3.right) > f2(o1.right), g2 = f2(a3.top) < f2(o1.top), u2 = f2(a3.bottom) > f2(o1.bottom), b1 = 'left' === n2 && h2 || 'right' === n2 && c1 || 'top' === n2 && g2 || 'bottom' === n2 && u2, w1 = -1 !== [
                            'top',
                            'bottom'
                        ].indexOf(n2), y1 = !!t1.flipVariations && (w1 && 'start' === r5 && h2 || w1 && 'end' === r5 && c1 || !w1 && 'start' === r5 && g2 || !w1 && 'end' === r5 && u2);
                        (m2 || b1 || y1) && (e2.flipped = !0, (m2 || b1) && (n2 = p2[d3 + 1]), y1 && (r5 = z(r5)), e2.placement = n2 + (r5 ? '-' + r5 : ''), e2.offsets.popper = fe({
                        }, e2.offsets.popper, D(e2.instance.popper, e2.offsets.reference, e2.placement)), e2 = P(e2.instance.modifiers, e2, 'flip'));
                    }), e2;
                },
                behavior: 'flip',
                padding: 5,
                boundariesElement: 'viewport'
            },
            inner: {
                order: 700,
                enabled: !1,
                fn: function(e2) {
                    var t1 = e2.placement, o1 = t1.split('-')[0], n2 = e2.offsets, i2 = n2.popper, r5 = n2.reference, p2 = -1 !== [
                        'left',
                        'right'
                    ].indexOf(o1), s3 = -1 === [
                        'top',
                        'left'
                    ].indexOf(o1);
                    return i2[p2 ? 'left' : 'top'] = r5[o1] - (s3 ? i2[p2 ? 'width' : 'height'] : 0), e2.placement = T(t1), e2.offsets.popper = g(i2), e2;
                }
            },
            hide: {
                order: 800,
                enabled: !0,
                fn: function(e2) {
                    if (!K(e2.instance.modifiers, 'hide', 'preventOverflow')) return e2;
                    var t1 = e2.offsets.reference, o1 = C(e2.instance.modifiers, function(e3) {
                        return 'preventOverflow' === e3.name;
                    }).boundaries;
                    if (t1.bottom < o1.top || t1.left > o1.right || t1.top > o1.bottom || t1.right < o1.left) {
                        if (!0 === e2.hide) return e2;
                        e2.hide = !0, e2.attributes['x-out-of-boundaries'] = '';
                    } else {
                        if (!1 === e2.hide) return e2;
                        e2.hide = !1, e2.attributes['x-out-of-boundaries'] = !1;
                    }
                    return e2;
                }
            },
            computeStyle: {
                order: 850,
                enabled: !0,
                fn: function(e2, t1) {
                    var o1 = t1.x, n2 = t1.y, i2 = e2.offsets.popper, r5 = C(e2.instance.modifiers, function(e3) {
                        return 'applyStyle' === e3.name;
                    }).gpuAcceleration;
                    void 0 !== r5 && console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
                    var s3, d3, a3 = void 0 === r5 ? t1.gpuAcceleration : r5, l3 = p(e2.instance.popper), f2 = u(l3), m2 = {
                        position: i2.position
                    }, h2 = q(e2, 2 > window.devicePixelRatio || !me), c1 = 'bottom' === o1 ? 'top' : 'bottom', g2 = 'right' === n2 ? 'left' : 'right', b1 = H('transform');
                    if (d3 = 'bottom' == c1 ? 'HTML' === l3.nodeName ? -l3.clientHeight + h2.bottom : -f2.height + h2.bottom : h2.top, s3 = 'right' == g2 ? 'HTML' === l3.nodeName ? -l3.clientWidth + h2.right : -f2.width + h2.right : h2.left, a3 && b1) m2[b1] = 'translate3d(' + s3 + 'px, ' + d3 + 'px, 0)', m2[c1] = 0, m2[g2] = 0, m2.willChange = 'transform';
                    else {
                        var w1 = 'bottom' == c1 ? -1 : 1, y1 = 'right' == g2 ? -1 : 1;
                        m2[c1] = d3 * w1, m2[g2] = s3 * y1, m2.willChange = c1 + ', ' + g2;
                    }
                    var E1 = {
                        "x-placement": e2.placement
                    };
                    return e2.attributes = fe({
                    }, E1, e2.attributes), e2.styles = fe({
                    }, m2, e2.styles), e2.arrowStyles = fe({
                    }, e2.offsets.arrow, e2.arrowStyles), e2;
                },
                gpuAcceleration: !0,
                x: 'bottom',
                y: 'right'
            },
            applyStyle: {
                order: 900,
                enabled: !0,
                fn: function(e2) {
                    return j(e2.instance.popper, e2.styles), V(e2.instance.popper, e2.attributes), e2.arrowElement && Object.keys(e2.arrowStyles).length && j(e2.arrowElement, e2.arrowStyles), e2;
                },
                onLoad: function(e2, t1, o1, n2, i2) {
                    var r5 = L(i2, t1, e2, o1.positionFixed), p2 = O(o1.placement, r5, t1, e2, o1.modifiers.flip.boundariesElement, o1.modifiers.flip.padding);
                    return t1.setAttribute('x-placement', p2), j(t1, {
                        position: o1.positionFixed ? 'fixed' : 'absolute'
                    }), o1;
                },
                gpuAcceleration: void 0
            }
        }
    }, ue;
}); //# sourceMappingURL=popper.min.js.map
